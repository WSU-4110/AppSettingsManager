version: 2.1

executors:
  docker-executor:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0

jobs:
  test:
    executor: docker-executor
    environment:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - checkout
      - run:
          name: Install Node.js
          command: |
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash
            sudo apt-get install -y nodejs
      - run:
          name: Test AppSettingsManagerApi
          command: dotnet test --configuration Release AppSettingsManagerAPI/AppSettingsManagerApi/AppSettingsManagerApi.csproj
      - run:
          name: Test AppSettingsManagerBff
          command: dotnet test --configuration Release AppSettingsManagerBff/AppSettingsManagerBff/AppSettingsManagerBff.csproj
      - run:
          name: Test SampleApp
          command: dotnet test --configuration Release SampleApp/SampleApp.csproj
      - run:
          name: Test AppSettingsManagerUi
          command: |
            cd AppSettingsManagerUI
            npm install
            ng test --watch=false --browsers=ChromeHeadless

  build-and-deploy:
    executor: docker-executor
    environment:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.17
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            sudo apt-get install -y zip
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash
            sudo apt-get install -y nodejs
            sudo npm install -g @angular/cli
      - run:
          name: Login to Azure
          command: |
            echo "$AZURE_SERVICE_PRINCIPAL" | base64 --decode > sp.json
            az login --service-principal -u $(jq -r '.clientId' sp.json) -p $(jq -r '.clientSecret' sp.json) --tenant $(jq -r '.tenantId' sp.json)
            rm sp.json
      - run:
          name: Build and deploy AppSettingsManagerApi
          command: |
            cd AppSettingsManagerAPI/AppSettingsManagerApi
            dotnet clean
            dotnet publish -c Release
            cd bin/Release/net6.0/publish
            zip -r ../publish.zip .
            az webapp deployment source config-zip --name appsettingsmanagerapi --resource-group appsettingsmanager --src publish.zip
      - run:
          name: Build and deploy AppSettingsManagerBff
          command: |
            cd ../../../../AppSettingsManagerBff/AppSettingsManagerBff
            dotnet clean
            dotnet publish -c Release
            cd bin/Release/net6.0/publish
            zip -r ../publish.zip .
            az webapp deployment source config-zip --name appsettingsmanagerbff --resource-group appsettingsmanager --src publish.zip
      - run:
          name: Build and deploy SampleApp
          command: |
            cd ../../../../SampleApp
            dotnet clean
            dotnet publish -c Release
            cd bin/Release/net6.0/publish
            zip -r ../publish.zip .
            az webapp deployment source config-zip --name appsettingsmanager-sampleapp --resource-group appsettingsmanager --src publish.zip
      - run:
          name: Build and deploy AppSettingsManagerUi
          command: |
            cd ../../../../AppSettingsManagerUI
            ng build
            az storage blob upload-batch --destination \$web --source dist/app-settings-manager-ui --account-name appsettingsmanager --overwrite

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - build-and-deploy:
          requires:
            - test
          filters:
            branches:
              only: main
