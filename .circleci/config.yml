version: 2.1

executors:
  docker-executor:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0

jobs:
  test:
    executor: docker-executor
    environment:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - checkout
      - run:
          name: Install Node.js
          command: |
            curl -sL https://deb.nodesource.com/setup_16.x | bash -
            apt-get install -y nodejs
      - run:
          name: Install Angular CLI
          command: npm install -g @angular/cli
      - run:
          name: Install Chrome dependencies
          command: |
            apt-get update
            apt-get install -y gnupg
            curl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
            echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list
            apt-get update
            apt-get install -y google-chrome-stable
      - run:
          name: Install ChromeHeadless dependencies
          command: |
            apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run:
          name: Test AppSettingsManagerApi
          command: dotnet test --configuration Release AppSettingsManagerAPI/AppSettingsManagerApi/AppSettingsManagerApi.csproj
      - run:
          name: Test AppSettingsManagerBff
          command: dotnet test --configuration Release AppSettingsManagerBff/AppSettingsManagerBff/AppSettingsManagerBff.csproj
      - run:
          name: Test SampleApp
          command: dotnet test --configuration Release SampleApp/SampleApp.csproj
      - run:
          name: Test AppSettingsManagerUi
          command: |
            cd AppSettingsManagerUI
            npm install
            ng test --watch=false --browsers=ChromeHeadlessNoSandbox

  build-and-deploy:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install zip
          command: apt-get update && apt-get install -y zip
      - run:
          name: Install dependencies
          command: |
            curl -sL https://deb.nodesource.com/setup_16.x | bash -
            apt-get install -y nodejs
            npm install -g azure-cli
      - run:
          name: Install jq and Azure CLI
          command: |
            apt-get update
            apt-get install -y jq
            curl -sL https://aka.ms/InstallAzureCLIDeb | bash
      - run:
          name: Authenticate to Azure
          command: |
            echo $AZURE_SERVICE_PRINCIPAL | base64 --decode > sp.json
            az login --service-principal --username "$(jq -r '.clientId' sp.json)" --password "$(jq -r '.clientSecret' sp.json)" --tenant "$(jq -r '.tenantId' sp.json)"
      - run:
          name: Build and deploy AppSettingsManagerApi
          command: |
            cd AppSettingsManagerAPI/AppSettingsManagerApi
            dotnet clean
            dotnet publish -c Release
            cd bin/Release/net6.0/publish
            zip -r ../publish.zip .
            cd ../../../../
            az webapp deployment source config-zip --name appsettingsmanagerapi --resource-group appsettingsmanager --src bin/Release/net6.0/publish.zip
      - run:
          name: Build and deploy AppSettingsManagerBff
          command: |
            cd AppSettingsManagerBff/AppSettingsManagerBff
            dotnet clean
            dotnet publish -c Release
            cd bin/Release/net6.0/publish
            zip -r ../publish.zip .
            cd ../../../../
            az webapp deployment source config-zip --name appsettingsmanagerbff --resource-group appsettingsmanager --src bin/Release/net6.0/publish.zip
      - run:
          name: Build and deploy SampleApp
          command: |
            cd SampleApp
            dotnet clean
            dotnet publish -c Release
            cd bin/Release/net6.0/publish
            zip -r ../publish.zip .
            cd ../../../../
            az webapp deployment source config-zip --name appsettingsmanager-sampleapp --resource-group appsettingsmanager --src bin/Release/net6.0/publish.zip
      - run:
          name: Build and deploy AppSettingsManagerUi
          command: |
            cd ../../../../AppSettingsManagerUI
            ng build
            az storage blob upload-batch --destination \$web --source dist/app-settings-manager-ui --account-name appsettingsmanager --overwrite
      - run:
          name: Logout from Azure
          command: az logout

workflows:
  # test-build-deploy:
  #   jobs:
  #     - test
  #     - deploy_approval:
  #         type: approval
  #         requires:
  #           - test
  #     - build-and-deploy:
  #         requires:
  #           - deploy_approval

  test-build-deploy:
    jobs:
      - build-and-deploy
